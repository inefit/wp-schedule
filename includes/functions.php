<?php/** * Author : Budi S * Author URI: http://inef.web.id * License: GPL2 */ function dite_schedule_pluginurl($param){	if($param == 'css' || $param == 'js' || $param == 'images') $path=$param;	else $path = '';	return plugin_dir_url(dirname(__FILE__)).$path;} function dite_date_time_mysql($date,$time){	$dates = explode('/',$date);	if(strlen($dates[0]) < 2) $dates[0] = "0".$dates[0];	if(strlen($dates[1]) < 2) $dates[1] = "0".$dates[1];	return $dates[2].'-'.$dates[0].'-'.$dates[1].' '.$time.':00';}function dite_schedule_js2phptime($jsdate){  if(preg_match('@(\d+)/(\d+)/(\d+)\s+(\d+):(\d+)@', $jsdate, $matches)==1){    $ret = mktime($matches[4], $matches[5], 0, $matches[1], $matches[2], $matches[3]);    //echo $matches[4] ."-". $matches[5] ."-". 0  ."-". $matches[1] ."-". $matches[2] ."-". $matches[3];  }else if(preg_match('@(\d+)/(\d+)/(\d+)@', $jsdate, $matches)==1){    $ret = mktime(0, 0, 0, $matches[1], $matches[2], $matches[3]);    //echo 0 ."-". 0 ."-". 0 ."-". $matches[1] ."-". $matches[2] ."-". $matches[3];  }  return $ret;}function dite_schedule_php2jstime($phpDate){    //echo $phpDate;    //return "/Date(" . $phpDate*1000 . ")/";    return date("m/d/Y H:i", $phpDate);}function dite_schedule_php2mysqltime($phpDate){    return date("Y-m-d H:i:s", $phpDate);}function dite_schedule_mysql2phptime($sqlDate){    $arr = date_parse($sqlDate);    return mktime($arr["hour"],$arr["minute"],$arr["second"],$arr["month"],$arr["day"],$arr["year"]);}function dite_schedule_list_calendar($day, $type){	$phpTime = dite_schedule_js2phptime($day);	//echo $phpTime . "+" . $type;	switch($type){		case "month":			$st = mktime(0, 0, 0, date("m", $phpTime), 1, date("Y", $phpTime));			$et = mktime(0, 0, -1, date("m", $phpTime)+1, 1, date("Y", $phpTime));			break;		case "week":			//suppose first day of a week is monday 			$monday  =  date("d", $phpTime) - date('N', $phpTime) + 1;			//echo date('N', $phpTime);			$st = mktime(0,0,0,date("m", $phpTime), $monday, date("Y", $phpTime));			$et = mktime(0,0,-1,date("m", $phpTime), $monday+7, date("Y", $phpTime));			break;		case "day":			$st = mktime(0, 0, 0, date("m", $phpTime), date("d", $phpTime), date("Y", $phpTime));			$et = mktime(0, 0, -1, date("m", $phpTime), date("d", $phpTime)+1, date("Y", $phpTime));			break;  }  //echo $st . "--" . $et;  return dite_schedule_list_calendar_by_range($st, $et);}function dite_schedule_list_calendar_by_range($sd, $ed){	global $wpdb, $current_user;	$ret = array();	$ret['events'] = array();	$ret["issort"] =true;	$ret["start"] = dite_schedule_php2jstime($sd);	$ret["end"] = dite_schedule_php2jstime($ed);	$ret['error'] = null;	try{		$sql = "select * from ".$wpdb->prefix."dite_appointment where `start_time` between '"			.dite_schedule_php2mysqltime($sd)."' and '". dite_schedule_php2mysqltime($ed)."'";		$results = $wpdb->get_results($sql);		foreach($results as $row) {			$ret['events'][] = array(				$row->post_id,				get_user_meta($row->user_id, 'first_name', 'true').' '.get_user_meta($row->user_id, 'last_name', 'true').' : '.$row->post_title,				dite_schedule_php2jstime(dite_schedule_mysql2phptime($row->start_time)),				dite_schedule_php2jstime(dite_schedule_mysql2phptime($row->end_time)),				$row->whole_day,				0, //more than one day event				//$row->InstanceType,				0,//Recurring event,				$row->color,				1,//editable				'', 				''//$attends			);		}	}	catch(Exception $e){     $ret['error'] = $e->getMessage();	}	return $ret;}function dite_schedule_update_meta($id,$meta_key,$meta_value){	global $wpdb;	$sql = "SELECT * FROM ".$wpdb->prefix."dite_appointment_meta WHERE post_id='".$id."' AND meta_key='".$meta_key."'";	$row = $wpdb->get_row( $wpdb->prepare($sql) );	$data = array(	'post_id'=> $id ,					'meta_key'=>$meta_key,					'meta_value'=>$meta_value			);	if($row){		$update = $wpdb->update( $wpdb->prefix."dite_appointment_meta",$data,array( 'meta_id' => $row->meta_id ) );		return $update;	}	else{		$insert = $wpdb->insert( $wpdb->prefix."dite_appointment_meta",$data );		return $insert;	}}function dite_schedule_remove_meta($id){	global $wpdb;	$sql = "DELETE FROM ".$wpdb->prefix."dite_appointment_meta WHERE post_id='".$id."'";	$wpdb->query( $wpdb->prepare( $sql ));		return true;}function dite_schedule_halftime($time){	$st_arr = explode(":", substr($time, -8,5));	if(intval($st_arr[0]) > 12){		$ntime = intval($st_arr[0] - 12) >= 10 ? intval($st_arr[0]-12).":".$st_arr[1]."PM" : "0".intval($st_arr[0]-12).":".$st_arr[1]."PM";	}	else if(intval($st_arr[0]) == 12){		$ntime = $st_arr[0].":".$st_arr[1]."PM";	}	else if(intval($st_arr[0]) == 0){		$ntime = "12:".$st_arr[1]."AM";	}	else{		$ntime = $st_arr[0].":".$st_arr[1]."AM";	}	return $ntime;}function dite_schedule_fulltime($time){	if(substr($time, -2) == 'AM'){		if(substr($time, 0,2) == 12)			$time = "00:".substr($time, 3,2);		else			$time = substr($time, 0,5);	}	else if(substr($time, -2) == 'PM'){		if(substr($time, 0,2) == 12)			$time = substr($time, 0,5);		else{			$menit = 12 + intval(substr($time, 0,2));			$time = $menit.":".substr($time, 3,2);		}				}	return $time;}?>